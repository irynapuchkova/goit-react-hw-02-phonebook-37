{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js"],"names":["ContactForm","state","name","number","onFormSubmit","e","preventDefault","props","onSubmit","reset","handleInputValue","currentTarget","value","setState","this","type","pattern","title","required","onChange","Component","Filter","ContactList","contacts","onClick","map","id","App","filter","formSubmitHandle","contact","includes","alert","newContact","shortid","generate","prevState","handleFilter","filterValue","toLowerCase","console","log","filterContacts","data","filteredContactsList","push","deleteContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16ccdc01.chunk.js","sourcesContent":["import { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onFormSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  handleInputValue = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.onFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={this.handleInputValue}\n        />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={this.handleInputValue}\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","export default function Filter({ value, onChange }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </div>\n  );\n}\n","export default function ContactList({ contacts, onClick }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>{name}</p>\n          <p>{number}</p>\n          <button type=\"button\" onClick={() => onClick(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { Component } from 'react';\n\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport shortid from 'shortid';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandle = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contactsNames = contacts.map(contact => contact.name);\n\n    if (contactsNames.includes(name)) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact],\n      }));\n    }\n  };\n\n  handleFilter = e => {\n    const filterValue = e.currentTarget.value.toLowerCase();\n    console.log(filterValue);\n    this.setState({ filter: filterValue });\n  };\n\n  filterContacts = data => {\n    const { filter } = this.state;\n    let filteredContactsList = [];\n\n    data.filter(contact => {\n      if (contact.name.toLowerCase().includes(filter)) {\n        return filteredContactsList.push(contact);\n      } else {\n        return filteredContactsList;\n      }\n    });\n    return filteredContactsList;\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContactsList = this.filterContacts(contacts);\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandle} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.handleFilter} />\n        <ContactList\n          contacts={filteredContactsList}\n          onClick={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'modern-normalize';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}