{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["Form","styled","form","Input","input","BtnSubmit","button","ContactForm","state","name","number","onFormSubmit","e","preventDefault","props","onSubmit","reset","handleInputValue","currentTarget","value","setState","this","type","placeholder","pattern","title","required","onChange","Component","Wrapper","div","Title","h3","Filter","ContactsList","ul","Contact","li","ContactData","p","BtnDelete","ContactList","contacts","onClick","map","id","FormSet","h1","App","filter","formSubmitHandle","contact","includes","alert","newContact","shortid","generate","prevState","handleFilter","filterValue","toLowerCase","console","log","filterContacts","data","filteredContactsList","push","deleteContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a3b15ed.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 100%;\n  background: #f7f7f7;\n`;\n\nexport const Input = styled.input`\n  -webkit-transition: all 0.3s ease-in-out;\n  -moz-transition: all 0.3s ease-in-out;\n  -ms-transition: all 0.3s ease-in-out;\n  -o-transition: all 0.3s ease-in-out;\n  outline: none;\n  box-sizing: border-box;\n  width: 100%;\n  background: #fff;\n  margin-bottom: 4%;\n  border: 1px solid #ccc;\n  padding: 3%;\n  color: #555;\n\n  &:focus {\n    box-shadow: 0 0 5px #43d1af;\n    padding: 3%;\n    border: 1px solid #43d1af;\n  }\n`;\n\nexport const BtnSubmit = styled.button`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-around;\n  width: 50%;\n  padding: 3%;\n  margin-left: auto;\n  margin-right: auto;\n\n  font-size: 16px;\n  font-weight: 600;\n\n  background: #188d8d;\n  color: #fff;\n\n  border-bottom: 2px solid #30c29e;\n  border-top-style: none;\n  border-right-style: none;\n  border-left-style: none;\n\n  &:hover {\n    background: #2ebc99;\n  }\n`;\n","import { Component } from 'react';\nimport { Form, Input, BtnSubmit } from './ContactForm.styled';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onFormSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  handleInputValue = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form onSubmit={this.onFormSubmit}>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={this.handleInputValue}\n        />\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={this.handleInputValue}\n        />\n        <BtnSubmit type=\"submit\">Add contact</BtnSubmit>\n      </Form>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  padding: 10px 30px;\n  background: #f8f8f8;\n  border-radius: 6px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h3`\n  background: #43d1af;\n  padding: 10px 0;\n  font-size: 120%;\n  font-weight: 200;\n  text-align: center;\n  color: #fff;\n`;\n\nexport const Input = styled.input`\n  -webkit-transition: all 0.3s ease-in-out;\n  -moz-transition: all 0.3s ease-in-out;\n  -ms-transition: all 0.3s ease-in-out;\n  -o-transition: all 0.3s ease-in-out;\n  outline: none;\n  box-sizing: border-box;\n  width: 100%;\n  background: #fff;\n  border: 1px solid #ccc;\n  padding: 3%;\n  color: #555;\n\n  &:focus {\n    box-shadow: 0 0 5px #43d1af;\n    padding: 3%;\n    border: 1px solid #43d1af;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Input, Wrapper } from './Filter.styled';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <Wrapper>\n      <Title>Find contacts by name</Title>\n      <Input\n        type=\"text\"\n        placeholder=\"Filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </Wrapper>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n\n  list-style-type: none;\n  width: 100%;\n`;\n\nexport const Contact = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n\n  padding: 10px;\n  overflow: auto;\n\n  &:hover {\n    background: #eee;\n    cursor: pointer;\n  }\n`;\n\nexport const ContactData = styled.p`\n  display: flex;\n`;\n\nexport const BtnDelete = styled.button`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 30%;\n  padding: 2%;\n\n  font-size: 16px;\n  font-weight: 400;\n\n  background: #188d8d;\n  color: #fff;\n\n  border-bottom: 2px solid #30c29e;\n  border-top-style: none;\n  border-right-style: none;\n  border-left-style: none;\n\n  &:hover {\n    background: #2ebc99;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  BtnDelete,\n  ContactsList,\n  Contact,\n  ContactData,\n} from './ContactList.styled';\n\nexport default function ContactList({ contacts, onClick }) {\n  return (\n    <ContactsList>\n      {contacts.map(({ id, name, number }) => (\n        <Contact key={id}>\n          <ContactData>{name}</ContactData>\n          <ContactData>{number}</ContactData>\n          <BtnDelete type=\"button\" onClick={() => onClick(id)}>\n            Delete\n          </BtnDelete>\n        </Contact>\n      ))}\n    </ContactsList>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onClick: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const FormSet = styled.div`\n  font: 95% Arial, Helvetica, sans-serif;\n  max-width: 400px;\n  margin: 10px auto;\n  padding: 16px;\n  background: #f7f7f7;\n`;\n\nexport const Title = styled.h1`\n  background: #43d1af;\n  padding: 20px 0;\n  font-size: 140%;\n  font-weight: 300;\n  text-align: center;\n  color: #fff;\n  font-weight: 600;\n`;\n","import { Component } from 'react';\nimport shortid from 'shortid';\n\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { Title, FormSet } from './App.styled';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandle = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contactsNames = contacts.map(contact => contact.name);\n\n    if (contactsNames.includes(name)) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  handleFilter = e => {\n    const filterValue = e.currentTarget.value.toLowerCase();\n    console.log(filterValue);\n    this.setState({ filter: filterValue });\n  };\n\n  filterContacts = data => {\n    const { filter } = this.state;\n    let filteredContactsList = [];\n\n    data.filter(contact => {\n      if (contact.name.toLowerCase().includes(filter)) {\n        return filteredContactsList.push(contact);\n      } else {\n        return filteredContactsList;\n      }\n    });\n    return filteredContactsList;\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContactsList = this.filterContacts(contacts);\n\n    return (\n      <FormSet>\n        <Title>Phonebook</Title>\n        <ContactForm onSubmit={this.formSubmitHandle} />\n\n        <Title>Contacts</Title>\n        <Filter value={filter} onChange={this.handleFilter} />\n        <ContactList\n          contacts={filteredContactsList}\n          onClick={this.deleteContact}\n        />\n      </FormSet>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'modern-normalize';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}