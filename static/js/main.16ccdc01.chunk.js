(this["webpackJsonpgoit-react-hw-02-phonebook-37"]=this["webpackJsonpgoit-react-hw-02-phonebook-37"]||[]).push([[0],{16:function(t,e,n){},27:function(t,e,n){"use strict";n.r(e);var a=n(1),r=n.n(a),c=n(8),i=n.n(c),o=(n(16),n(17),n(11)),s=n(3),u=n(4),l=n(6),d=n(5),b=n(9),h=n(0),m=function(t){Object(l.a)(n,t);var e=Object(d.a)(n);function n(){var t;Object(s.a)(this,n);for(var a=arguments.length,r=new Array(a),c=0;c<a;c++)r[c]=arguments[c];return(t=e.call.apply(e,[this].concat(r))).state={name:"",number:""},t.onFormSubmit=function(e){e.preventDefault(),t.props.onSubmit(t.state),t.reset()},t.handleInputValue=function(e){var n=e.currentTarget,a=n.name,r=n.value;t.setState(Object(b.a)({},a,r))},t.reset=function(){t.setState({name:"",number:""})},t}return Object(u.a)(n,[{key:"render",value:function(){var t=this.state,e=t.name,n=t.number;return Object(h.jsxs)("form",{onSubmit:this.onFormSubmit,children:[Object(h.jsx)("input",{type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0,value:e,onChange:this.handleInputValue}),Object(h.jsx)("input",{type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0,value:n,onChange:this.handleInputValue}),Object(h.jsx)("button",{type:"submit",children:"Add contact"})]})}}]),n}(a.Component);function j(t){var e=t.value,n=t.onChange;return Object(h.jsxs)("div",{children:[Object(h.jsx)("p",{children:"Find contacts by name"}),Object(h.jsx)("input",{type:"text",value:e,onChange:n})]})}function p(t){var e=t.contacts,n=t.onClick;return Object(h.jsx)("ul",{children:e.map((function(t){var e=t.id,a=t.name,r=t.number;return Object(h.jsxs)("li",{children:[Object(h.jsx)("p",{children:a}),Object(h.jsx)("p",{children:r}),Object(h.jsx)("button",{type:"button",onClick:function(){return n(e)},children:"Delete"})]},e)}))})}var f=n(10),v=n.n(f),O=function(t){Object(l.a)(n,t);var e=Object(d.a)(n);function n(){var t;Object(s.a)(this,n);for(var a=arguments.length,r=new Array(a),c=0;c<a;c++)r[c]=arguments[c];return(t=e.call.apply(e,[this].concat(r))).state={contacts:[{id:"id-1",name:"Rosie Simpson",number:"459-12-56"},{id:"id-2",name:"Hermione Kline",number:"443-89-12"},{id:"id-3",name:"Eden Clements",number:"645-17-79"},{id:"id-4",name:"Annie Copeland",number:"227-91-26"}],filter:""},t.formSubmitHandle=function(e){var n=e.name,a=e.number;if(t.state.contacts.map((function(t){return t.name})).includes(n))return alert("".concat(n," is already in contacts"));var r={id:v.a.generate(),name:n,number:a};t.setState((function(t){return{contacts:[].concat(Object(o.a)(t.contacts),[r])}}))},t.handleFilter=function(e){var n=e.currentTarget.value.toLowerCase();console.log(n),t.setState({filter:n})},t.filterContacts=function(e){var n=t.state.filter,a=[];return e.filter((function(t){return t.name.toLowerCase().includes(n)?a.push(t):a})),a},t.deleteContact=function(e){t.setState((function(t){return{contacts:t.contacts.filter((function(t){return t.id!==e}))}}))},t}return Object(u.a)(n,[{key:"render",value:function(){var t=this.state,e=t.contacts,n=t.filter,a=this.filterContacts(e);return Object(h.jsxs)("div",{children:[Object(h.jsx)("h1",{children:"Phonebook"}),Object(h.jsx)(m,{onSubmit:this.formSubmitHandle}),Object(h.jsx)("h2",{children:"Contacts"}),Object(h.jsx)(j,{value:n,onChange:this.handleFilter}),Object(h.jsx)(p,{contacts:a,onClick:this.deleteContact})]})}}]),n}(a.Component);i.a.render(Object(h.jsx)(r.a.StrictMode,{children:Object(h.jsx)(O,{})}),document.getElementById("root"))}},[[27,1,2]]]);
//# sourceMappingURL=main.16ccdc01.chunk.js.map